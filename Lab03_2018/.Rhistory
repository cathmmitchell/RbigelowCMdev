data <- bind_rows(data)
View(data)
View(data)
library("contoureR")
cnt <- getContourLines(data[,c(2,3,5)],nlevels=200)
View(cruiseList)
View(cruiseList)
View(cruiseList)
View(cruiseList)
View(cruiseList)
View(cruiseList)
setwd('C:/Users/Catherine/Documents/REUColbyCoding/CMdev/RbigelowCMdev/Lab03_2018')
setwd('C:/Users/Catherine/Documents/REUColbyCoding/CMdev/RbigelowCMdev/Lab03_2018')
# read in the whole csv file
DATA <- read.csv('Colby_discrete_data_2016.csv')
setwd("~/REUColbyCoding/CMdev/RbigelowCMdev/Lab03_2018")
# read in the whole csv file
DATA <- read.csv('Colby_discrete_data_2016.csv')
# read in the whole csv file
DATA <- read.csv('Colby_discrete_data_2016.csv', header = TRUE)
# read in the whole csv file
DATA <- read.csv('Colby_discrete_data_2016', header = TRUE)
dir
dir()
# read in the whole csv file
DATA <- read.csv('Colby_discrete_data_2016.csv', header = TRUE)
# read in the whole csv file
DATA <- read.csv('', header = TRUE)
# read in the whole csv file
DATA <- read.csv('Colby_discrete_data_2016.csv', header = TRUE)
install.packages("plotly")
library("plotly")
surface = DATA[DATA$Depth < 5,c(DATA$ID,DATA$Station,DATA$NO3.2)]
View(DATA)
View(DATA)
surface = DATA[DATA$Depth < 5,c(DATA$ID,DATA$Station,DATA$NO3.2)]
#surface = DATA[DATA$Depth < 5,c(DATA$ID,DATA$Station,DATA$NO3.2)]
surface = DATA[DATA$Depth < 5,c(1,2,5)]
#plot_ly(x= x$x, y = x$y, z = x$value, type = "contour")
View(surface)
surface = DATA[DATA$Depth < 5,c(1,2,5)]
plot_ly(x= surface$ID, y = surface$Station, z = surface$NO3.2, type = "contour")
surface = DATA[DATA$Depth < 5,]
plot_ly(x= surface$ID, y = surface$Station, z = surface$NO3.2, type = "contour")
surface = DATA[DATA$Depth < 5,]
plot_ly(x= surface$ID, y = surface$Station, z = surface$NO3.2, type = "contour", xlab = 'Cruise number', ylab = 'Station number')
surface = DATA[DATA$Depth < 5,]
plot_ly(x= surface$ID, y = surface$Station, z = surface$NO3.2,
type = "contour", xlab = 'Cruise number', ylab = 'Station number',
main = "NO3.2")
surface = DATA[DATA$Depth < 5,]
contour(x= surface$ID, y = surface$Station, z = surface$NO3.2,
type = "contour", xlab = 'Cruise number', ylab = 'Station number',
main = "NO3.2")
surface = DATA[DATA$Depth < 5,]
plot_ly(x= surface$ID, y = surface$Station, z = surface$NO3.2,
type = "contour")
layour(xaxis = 'Cruise number', yaxis = 'Station number',
title = "NO3.2")
surface = DATA[DATA$Depth < 5,]
plot_ly(x= surface$ID, y = surface$Station, z = surface$NO3.2,
type = "contour")
layout(xaxis = 'Cruise number', yaxis = 'Station number',
title = "NO3.2")
surface = DATA[DATA$Depth < 5,]
p = plot_ly(x= surface$ID, y = surface$Station, z = surface$NO3.2,
type = "contour")
layout(p, xaxis = 'Cruise number', yaxis = 'Station number',
title = "NO3.2")
surface = DATA[DATA$Depth < 5,]
p = plot_ly(x= surface$ID, y = surface$Station, z = surface$NO3.2,
type = "contour")
layout(p, xaxis = list(title = 'Cruise number'), yaxis = list(title = 'Station number'))#,
#title = "NO3.2")
p
surface = DATA[DATA$Depth < 5,]
p = plot_ly(x= surface$ID, y = surface$Station, z = surface$NO3.2,
type = "contour")
layout(p, xaxis = list(title = 'Cruise number'), yaxis = list(title = 'Station number'), title = "NO3.2")
p
surface = DATA[DATA$Depth < 5,]
p = plot_ly(x= surface$ID, y = surface$Station, z = surface$NO3.2,
type = "contour")
layout(p, xaxis = list(title = 'Cruise number'), yaxis = list(title = 'Station number'), title = "NO3.2")
#p
surface = DATA[DATA$Depth < 5,]
p = plot_ly(x= surface$ID, y = surface$Station, z = surface$NO3.2,
type = "contour")
layout(p, xaxis = list(title = 'Cruise number'), yaxis = list(title = 'Station number'), title = "NO3.2")
#extracting data with a depth of less than 5m
surface = DATA[DATA$Depth < 5,]
#plotting the contour plot
p = plot_ly(x= surface$ID, y = surface$Station, z = surface$NO3.2,
type = "contour")
#adding the axis labels and title
layout(p, xaxis = list(title = 'Cruise number'), yaxis = list(title = 'Station number'), title = "NO3.2")
#extracting data with a depth of less than 5m
surface = DATA[DATA$Depth < 5,]
#plotting the contour plot
p = plot_ly(x= surface$ID, y = surface$Station, z = surface$NO3.2,
type = "contour")
#adding the axis labels and title
colorbar(title = "NO3.2 (uM)")
#extracting data with a depth of less than 5m
surface = DATA[DATA$Depth < 5,]
#plotting the contour plot
p = plot_ly(x= surface$ID, y = surface$Station, z = surface$NO3.2,
type = "contour")
#adding the axis labels and title
colorbar(p,title = "NO3.2 (uM)")
layout(p, xaxis = list(title = 'Cruise number'), yaxis = list(title = 'Station number'))
#extracting data with a depth of less than 5m
surface = DATA[DATA$Depth < 5,]
#plotting the contour plot
p = plot_ly(x= surface$ID, y = surface$Station, z = surface$NO3.2,
type = "contour")
#adding the axis labels and title
colorbar(p,title = "NO3.2 (uM)")
layout(p, xaxis = list(title = 'Cruise number'), yaxis = list(title = 'Station number'))
#extracting data with a depth of less than 5m
surface = DATA[DATA$Depth < 5,]
#plotting the contour plot
p = plot_ly(x= surface$ID, y = surface$Station, z = surface$NO3.2,
type = "contour")
#adding the axis labels and title
colorbar(p,title = "NO3.2 (uM)") +
layout(p, xaxis = list(title = 'Cruise number'), yaxis = list(title = 'Station number'))
#extracting data with a depth of less than 5m
surface = DATA[DATA$Depth < 5,]
#plotting the contour plot
p = plot_ly(x= surface$ID, y = surface$Station, z = surface$NO3.2,
type = "contour")
#adding the axis labels and title
layout(p, xaxis = list(title = 'Cruise number'), yaxis = list(title = 'Station number'), title = "NO3.2")
CTDdata <- read.csv('Colby_cruise_data_2012-2017.csv')
st1 <- DATA[DATA$Station == 1,]
plot_ly(x=st1$ID,y=st1$Depth,z=st1$NO3.2,type="contour")
View(CTDdata)
# read in the whole csv file
discreteDATA <- read.csv('Colby_discrete_data_2016.csv', header = TRUE)
#extracting data with a depth of less than 5m
surface = discreteDATA[discreteDATA$Depth < 5,]
#plotting the contour plot
p = plot_ly(x= surface$ID, y = surface$Station, z = surface$NO3.2,
type = "contour")
#adding the axis labels and title
layout(p, xaxis = list(title = 'Cruise number'), yaxis = list(title = 'Station number'), title = "NO3.2")
#importing the CTD data
CTDdata <- read.csv('Colby_cruise_data_2012-2017.csv')
#making a list of the dates of each cruise
dates <- unique(CTDdata[['Date']])
#extracting data for the cruise on September 8th 2016
cruiseData <- CTDdata[CTDdata[['Date']] == 20160908,]
#extracting station1 from the cruiseData dataframe
stationData <- cruiseData[cruiseData$Station == ss,]
View(stationData)
#importing the CTD data
CTDdata <- read.csv('Colby_cruise_data_2012-2017.csv')
#making a list of the dates of each cruise
dates <- unique(CTDdata[['Date']])
#extracting data for the cruise on September 8th 2016
cruiseData <- CTDdata[CTDdata[['Date']] == 20160908,]
#extracting station 4 from the cruiseData dataframe
stationData <- cruiseData[cruiseData$Station == 4,]
plot_yl(x = cruiseData$station, y = cruiseData$Depth, z = cruiseData$Temperature, type = "contour")
plot_ly(x = cruiseData$station, y = cruiseData$Depth, z = cruiseData$Temperature, type = "contour")
View(cruiseData)
View(cruiseData)
plot_ly(x = cruiseData$Station, y = cruiseData$Depth, z = cruiseData$Temperature, type = "contour")
plot_ly(x = cruiseData$Station, y = cruiseData$Depth, z = cruiseData$Temperature, type = "contour", width=0)
plot_ly(x = cruiseData$Station, y = cruiseData$Depth, z = cruiseData$Temperature, type = "contour", contours = list(showlines = FALSE))
plot_ly(x = cruiseData$Station, y = cruiseData$Depth, z = cruiseData$Temperature, type = "contour", contours = list(showlines = FALSE))
layout(yaxis = list(autorange = "reversed"))
p <- plot_ly(x = cruiseData$Station, y = cruiseData$Depth, z = cruiseData$Temperature, type = "contour", contours = list(showlines = FALSE))
layout(p,yaxis = list(autorange = "reversed"))
p <- plot_ly(x = cruiseData$Station, y = cruiseData$Depth, z = cruiseData$Temperature, type = "contour", contours = list(showlines = FALSE))
layout(p,yaxis = list(autorange = "reversed"))
add_markers(p,x = cruiseData$Station, y = cruiseData$Depth)
p <- plot_ly(x = cruiseData$Station, y = cruiseData$Depth, z = cruiseData$Temperature, type = "contour", contours = list(showlines = FALSE))
add_markers(p,x = cruiseData$Station, y = cruiseData$Depth)
layout(p,yaxis = list(autorange = "reversed"))
p <- plot_ly(x = cruiseData$Station, y = cruiseData$Depth, z = cruiseData$Temperature, type = "contour", contours = list(showlines = FALSE))
add_markers(p,y = cruiseData$Depth)
layout(p,yaxis = list(autorange = "reversed"))
p <- plot_ly(x = cruiseData$Station, y = cruiseData$Depth, z = cruiseData$Temperature, type = "contour", contours = list(showlines = FALSE))
add_markers(p,x = cruiseData$Station, y = cruiseData$Depth,
marker=list(size=10), color=I("black"))
layout(p,yaxis = list(autorange = "reversed"))
p <- plot_ly(x = cruiseData$Station, y = cruiseData$Depth, z = cruiseData$Temperature, type = "contour", contours = list(showlines = FALSE))
add_markers(p,x = cruiseData$Station, y = cruiseData$Depth,
marker=list(size=10), color=I("black"))
#layout(p,yaxis = list(autorange = "reversed"))
p <- plot_ly(x = cruiseData$Station, y = cruiseData$Depth, z = cruiseData$Temperature, type = "contour", contours = list(showlines = FALSE))  %>%
add_markers(p,x = cruiseData$Station, y = cruiseData$Depth,
marker=list(size=10), color=I("black"))
#layout(p,yaxis = list(autorange = "reversed"))
p <- plot_ly(x = cruiseData$Station, y = cruiseData$Depth, z = cruiseData$Temperature, type = "contour", contours = list(showlines = FALSE))  %>%
add_markers(p,x = cruiseData$Station, y = cruiseData$Depth,
marker=list(size=10), color=I("black"))
p
#layout(p,yaxis = list(autorange = "reversed"))
p <- plot_ly(x = cruiseData$Station, y = cruiseData$Depth, z = cruiseData$Temperature, type = "contour", contours = list(showlines = FALSE))
add_markers(p,x = cruiseData$Station, y = cruiseData$Depth, z = 0
marker=list(size=10), color=I("black"))
p <- plot_ly(x = cruiseData$Station, y = cruiseData$Depth, z = cruiseData$Temperature, type = "contour", contours = list(showlines = FALSE))
add_markers(p,x = cruiseData$Station, y = cruiseData$Depth, z = 0,
marker=list(size=10), color=I("black"))
p
#layout(p,yaxis = list(autorange = "reversed"))
p <- plot_ly(x = cruiseData$Station, y = cruiseData$Depth, z = cruiseData$Temperature, type = "contour", contours = list(showlines = FALSE))
layout(p,yaxis = list(autorange = "reversed"))
p <- plot_ly(x = cruiseData$Station, y = cruiseData$Depth, z = cruiseData$Temperature, type = "contour", contours = list(showlines = FALSE))
layout(p,yaxis = list(autorange = "reversed"),
xaxis = list(title = 'Station number'),
yaxis = list(title = 'Depth'),
title = "NO3.2")
p <- plot_ly(x = cruiseData$Station, y = cruiseData$Depth, z = cruiseData$Temperature, type = "contour", contours = list(showlines = FALSE))
layout(p,yaxis = list(autorange = "reversed"),
xaxis = list(title = 'Station number'),
yaxis = list(title = 'Depth'),
title = "Temperature (deg C)")
#extracting data with a depth of less than 5m
surface = discreteDATA[discreteDATA$Depth < 5,]
#plotting the contour plot
p = plot_ly(x= surface$ID, y = surface$Station, z = surface$NO3.2,
type = "contour")
#adding the axis labels and title
layout(p, xaxis = list(title = 'Cruise number'), yaxis = list(title = 'Station number'), title = "NO3.2 (uM)")
# plotting the contour plot
p <- plot_ly(x = cruiseData$Station, y = cruiseData$Depth, z = cruiseData$Temperature, type = "contour", contours = list(showlines = FALSE))
#adding the labels and reversing the y-axis
layout(p,yaxis = list(autorange = "reversed"),
xaxis = list(title = 'Station number'),
yaxis = list(title = 'Depth (m)'),
title = "Temperature (deg C)")
# plotting the contour plot
p <- plot_ly(x = cruiseData$Station, y = cruiseData$Depth, z = cruiseData$Temperature, type = "contour", contours = list(showlines = FALSE))
#adding the labels and reversing the y-axis
layout(p,yaxis = list(autorange = "reversed",title = 'Depth (m)'),
xaxis = list(title = 'Station number'),
title = "Temperature (deg C)")
library("fields")
#stationLat <- c(43+54.130/60, 43+51.8/60, 43+48.56/60, 43+44.87/60)
#creating an empty matrix with 100 rows (i.e. for 100 depths) and 4 columns (i.e. one for each station)
TEM <- matrix(NA,nrow = 100, ncol = 4)
#looping through each station
for (st in 1:4){
#looping through each depth interval (from 1m to 100m)
for (j in 1:100){
#extracting the relevant station from the cruiseData data frame
stationData <- cruiseData[cruiseData$Station == st,]
#binned temperature value for given depth interval
temp = mean(stationData[ceiling(stationData$Depth)==j,'Temperature'])
#assinging the binned temperature to the j-th row and st-th column of the TEM matrix
TEM[j,st] <- temp
}
}
image.plot(x=1:4,y=-100:-1,t(TEM[100:1,4:1]),
zlim=c(8,20),
col=tim.colors(24),
xlab='latitude (deg N)',
ylab='Depth (m)',
main='Cruise 20170912',
legend.lab='Temperature (C)',
legend.line=2.5)
image.plot(x=1:4,y=-100:-1,t(TEM[100:1,4:1]),
zlim=c(8,20),
col=tim.colors(24),
xlab='latitude (deg N)',
ylab='Depth (m)',
main='Cruise 20160908',
legend.lab='Temperature (C)',
legend.line=2.5)
library("RColorBrewer")
colpal <- colorRampPalette(brewer.pal(9,'RdPu'))   # make colors
image.plot(x=stationLat[4:1],y=-100:-1,t(TEM[100:1,4:1]),
zlim=c(8,20),
col=colpal(24),
xlab='latitude (deg N)',
ylab='Depth (m)',
main='colby20170912',
legend.lab='Temperature (C)',
legend.line=2.5)
image.plot(x=1:4,y=-100:-1,t(TEM[100:1,4:1]),
zlim=c(8,20),
col=tim.colors(24),
xlab='station',
ylab='Depth (m)',
main='Cruise 20160908',
legend.lab='Temperature (C)',
legend.line=2.5)
colpal <- colorRampPalette(brewer.pal(9,'RdPu'))   # make colors
image.plot(x=1:4,y=-100:-1,t(TEM[100:1,4:1]),
zlim=c(8,20),
col=colpal(60),
xlab='Station',
ylab='Depth (m)',
main='Cruise 20160908',
legend.lab='Temperature (C)',
legend.line=2.5)
colpal <- colorRampPalette(brewer.pal(9,'YlGnBu'))   # make colors
image.plot(x=1:4,y=-100:-1,t(TEM[100:1,4:1]),
zlim=c(8,20),
col=colpal(60),
xlab='Station',
ylab='Depth (m)',
main='Cruise 20160908',
legend.lab='Temperature (C)',
legend.line=2.5)
colpal <- colorRampPalette(brewer.pal(9,'YlOrRd'))   # make colors
image.plot(x=1:4,y=-100:-1,t(TEM[100:1,4:1]),
zlim=c(8,20),
col=colpal(60),
xlab='Station',
ylab='Depth (m)',
main='Cruise 20160908',
legend.lab='Temperature (C)',
legend.line=2.5)
for (ii in 1:4) {
print("hello")
}
for (ii in 1:4) {
print(paste(ii,"hello"))
}
stationLat <- c(43+54.130/60, 43+51.8/60, 43+48.56/60, 43+44.87/60)
#creating an empty matrix with 100 rows (i.e. for 100 depths) and 4 columns (i.e. one for each station)
TEM <- matrix(NA,nrow = 100, ncol = 4)
#looping through each station
for (st in 1:4){
#looping through each depth interval (from 1m to 100m)
for (j in 1:100){
#extracting the relevant station from the cruiseData data frame
stationData <- cruiseData[cruiseData$Station == st,]
#binned temperature value for given depth interval
temp = mean(stationData[ceiling(stationData$Depth)==j,'Temperature'])
#assinging the binned temperature to the j-th row and st-th column of the TEM matrix
TEM[j,st] <- temp
}
}
image.plot(x=stationLat(4:1),y=-100:-1,t(TEM[100:1,4:1]),
zlim=c(8,20),
col=tim.colors(24),
xlab='Latitude (deg N)',
ylab='Depth (m)',
main='Cruise 20160908',
legend.lab='Temperature (C)',
legend.line=2.5)
image.plot(x=stationLat[4:1],y=-100:-1,t(TEM[100:1,4:1]),
zlim=c(8,20),
col=tim.colors(24),
xlab='Latitude (deg N)',
ylab='Depth (m)',
main='Cruise 20160908',
legend.lab='Temperature (C)',
legend.line=2.5)
colpal <- colorRampPalette(brewer.pal(9,'YlOrRd'))   # make colors
image.plot(x=stationLat[4:1],y=-100:-1,t(TEM[100:1,4:1]),
zlim=c(8,20),
col=colpal(60),
xlab='Station',
ylab='Depth (m)',
main='Cruise 20160908',
legend.lab='Temperature (C)',
legend.line=2.5)
#importing the CTD data
CTDdata <- read.csv('Colby_cruise_data_2012-2017.csv')
#making a list of the dates of each cruise
dates <- unique(CTDdata[['Date']])
#extracting data for the cruise on September 8th 2016
cruiseData <- CTDdata[CTDdata[['Date']] == dates[20],]
addition <- function(a,b){
return(a+b)
}
addition(9,3)
#extracting data with a depth of less than 5m
surface = discreteDATA[discreteDATA$Depth < 5,]
#plotting the contour plot
p = plot_ly(x= surface$ID, y = surface$Station, z = surface$NO3.2,
type = "contour")
#adding the axis labels and title
layout(p, xaxis = list(title = 'Cruise number'), yaxis = list(title = 'Station number'), title = "NO3.2 (uM)")
#importing the CTD data
CTDdata <- read.csv('Colby_cruise_data_2012-2017.csv')
#making a list of the dates of each cruise
dates <- unique(CTDdata[['Date']])
#extracting data for the cruise on September 8th 2016
cruiseData <- CTDdata[CTDdata[['Date']] == dates[20],]
# plotting the contour plot
p <- plot_ly(x = cruiseData$Station, y = cruiseData$Depth, z = cruiseData$Temperature, type = "contour", contours = list(showlines = FALSE))
#adding the labels and reversing the y-axis
layout(p,yaxis = list(autorange = "reversed",title = 'Depth (m)'),
xaxis = list(title = 'Station number'),
title = "Temperature (deg C)")
for (ii in 1:4) {
print("hello")
}
for (ii in 1:4) {
print(paste(ii,"hello"))
}
stationLat <- c(43+54.130/60, 43+51.8/60, 43+48.56/60, 43+44.87/60)
#creating an empty matrix with 100 rows (i.e. for 100 depths) and 4 columns (i.e. one for each station)
TEM <- matrix(NA,nrow = 100, ncol = 4)
#looping through each station
for (st in 1:4){
#looping through each depth interval (from 1m to 100m)
for (j in 1:100){
#extracting the relevant station from the cruiseData data frame
stationData <- cruiseData[cruiseData$Station == st,]
#binned temperature value for given depth interval
temp = mean(stationData[ceiling(stationData$Depth)==j,'Temperature'])
#assinging the binned temperature to the j-th row and st-th column of the TEM matrix
TEM[j,st] <- temp
}
}
image.plot(x=stationLat[4:1],y=-100:-1,t(TEM[100:1,4:1]),
zlim=c(8,20),
col=tim.colors(24),
xlab='Latitude (deg N)',
ylab='Depth (m)',
main='Cruise 20160908',
legend.lab='Temperature (C)',
legend.line=2.5)
dates
#importing the CTD data
CTDdata <- read.csv('Colby_cruise_data_2012-2017.csv')
#making a list of the dates of each cruise
dates <- unique(CTDdata[['Date']])
#extracting data for the cruise on September 8th 2016
cruiseData <- CTDdata[CTDdata[['Date']] == dates[17],]
# plotting the contour plot
p <- plot_ly(x = cruiseData$Station, y = cruiseData$Depth, z = cruiseData$Temperature, type = "contour", contours = list(showlines = FALSE))
#adding the labels and reversing the y-axis
layout(p,yaxis = list(autorange = "reversed",title = 'Depth (m)'),
xaxis = list(title = 'Station number'),
title = "Temperature (deg C)")
dates[17]
stationLat <- c(43+54.130/60, 43+51.8/60, 43+48.56/60, 43+44.87/60)
#creating an empty matrix with 100 rows (i.e. for 100 depths) and 4 columns (i.e. one for each station)
TEM <- matrix(NA,nrow = 100, ncol = 4)
#looping through each station
for (st in 1:4){
#looping through each depth interval (from 1m to 100m)
for (j in 1:100){
#extracting the relevant station from the cruiseData data frame
stationData <- cruiseData[cruiseData$Station == st,]
#binned temperature value for given depth interval
temp = mean(stationData[ceiling(stationData$Depth)==j,'Temperature'])
#assinging the binned temperature to the j-th row and st-th column of the TEM matrix
TEM[j,st] <- temp
}
}
image.plot(x=stationLat[4:1],y=-100:-1,t(TEM[100:1,4:1]),
zlim=c(8,20),
col=tim.colors(24),
xlab='Latitude (deg N)',
ylab='Depth (m)',
main='Cruise 20160908',
legend.lab='Temperature (C)',
legend.line=2.5)
colpal <- colorRampPalette(brewer.pal(9,'YlOrRd'))   # make colors
image.plot(x=stationLat[4:1],y=-100:-1,t(TEM[100:1,4:1]),
zlim=c(8,20),
col=colpal(60),
xlab='Station',
ylab='Depth (m)',
main='Cruise 20160908',
legend.lab='Temperature (C)',
legend.line=2.5)
col2matrix <- function(columnName){
#creating an empty matrix with 100 rows (i.e. for 100 depths) and 4 columns (i.e. one for each station)
TEM <- matrix(NA,nrow = 100, ncol = 4)
#looping through each station
for (st in 1:4){
#looping through each depth interval (from 1m to 100m)
for (j in 1:100){
#extracting the relevant station from the cruiseData data frame
stationData <- cruiseData[cruiseData$Station == st,]
#binned temperature value for given depth interval
temp = mean(stationData[ceiling(stationData$Depth)==j,columnName])
#assinging the binned temperature to the j-th row and st-th column of the TEM matrix
TEM[j,st] <- temp
}
}
return(TEM)
}
col2matrix <- function(columnName){
#creating an empty matrix with 100 rows (i.e. for 100 depths) and 4 columns (i.e. one for each station)
TEM <- matrix(NA,nrow = 100, ncol = 4)
#looping through each station
for (st in 1:4){
#looping through each depth interval (from 1m to 100m)
for (j in 1:100){
#extracting the relevant station from the cruiseData data frame
stationData <- cruiseData[cruiseData$Station == st,]
#binned temperature value for given depth interval
temp = mean(stationData[ceiling(stationData$Depth)==j,columnName])
#assinging the binned temperature to the j-th row and st-th column of the TEM matrix
TEM[j,st] <- temp
}
}
return(TEM)
}
X <- col2matrix('Salinity')
image.plot(x=stationLat[4:1],y=-100:-1,t(X[100:1,4:1]),
zlim=c(30,38),
col=colpal(60))
image.plot(x=stationLat[4:1],y=-100:-1,t(X[100:1,4:1]),
zlim=c(30,34),
col=colpal(60))
image.plot(x=stationLat[4:1],y=-100:-1,t(X[100:1,4:1]),
zlim=c(31,34),
col=colpal(60))
