library("readxl")
installed.packages
installed.packages()
install.packages("tidyverse")
library("readxl")
version
read_excel("Colby_cruise_data_2012-2017.xlsx",sheet="CTD all years")
warnings()
DATA<- read_excel("Colby_cruise_data_2012-2017.xlsx",sheet="CTD all years",range="A:M")
DATA<- read_excel("Colby_cruise_data_2012-2017.xlsx",sheet="CTD all years",range=cell_cols("A:M"))
View(DATA)
DATA<- read_excel("Colby_cruise_data_2012-2017.xlsx",sheet="CTD all years",range=cell_cols("A:M"),col_types=c("date","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric"))
DATA<- read_excel("Colby_cruise_data_2012-2017.xlsx",sheet="CTD all years",range=cell_cols("A:M"),col_types=c("skip","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric"))
View(DATA)
DATA<- read_excel("Colby_cruise_data_2012-2017.xlsx",sheet="CTD all years",range=cell_cols("A3:M51071"),col_types=c("skip","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric"))
DATA<- read_excel("Colby_cruise_data_2012-2017.xlsx",sheet="CTD all years",range="A3:M51071",col_types=c("skip","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric"))
DATA<- read_excel("Colby_cruise_data_2012-2017.xlsx",sheet="CTD all years",range="A3:M51071",col_types=c("skip","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric"),col_names=FALSE)
headers<-read_excel("Colby_cruise_data_2012-2017.xlsx",sheet="CTD all years",range=cell_rows("1"),col_names=FALSE)
headers<-read_excel("Colby_cruise_data_2012-2017.xlsx",sheet="CTD all years",range=cell_rows("1"),col_names=FALSE,col_types="text")
headers<-read_excel("Colby_cruise_data_2012-2017.xlsx",sheet="CTD all years",range=cell_rows("1:2"),col_names=FALSE,col_types="text")
DATA<- read_excel("Colby_cruise_data_2012-2017.xlsx",sheet="CTD all years",range="A3:M51071",col_types=c("skip","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric"))
DATA<- read_excel("Colby_cruise_data_2012-2017.xlsx",sheet="CTD all years",range=cell_cols("A:M"),col_types=c("skip","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric"))
headers<-read_excel("Colby_cruise_data_2012-2017.xlsx",sheet="CTD all years",range=cell_rows("1"),col_names=FALSE,col_types="text")
DATA1 <- DATA[-1]
View(DATA1)
View(DATA1)
DATA1 <- DATA[-1,]
library("readxl")
DATA<- read_excel("Colby_cruise_data_2012-2017.xlsx",sheet="CTD all years",range=cell_cols("A:M"),col_types=c("skip","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric"))
DATA <- DATA[-1,]
library("ggplot2")
library("ggplot2")
library("readxl")
DATA<- read_excel("Colby_cruise_data_2012-2017.xlsx",sheet="CTD all years",range=cell_cols("A:M"),col_types=c("skip","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric"))
DATA <- DATA[-1,]
library("readxl")
DATA<- read_excel("Colby_cruise_data_2012-2017.xlsx",sheet="CTD all years",range=cell_cols("A:M"),col_types=c("skip","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric"))
DATA <- DATA[-1,]
library("ggplot2")
ggplot(data = DATA) +
geom_point(mapping = aes(x = Temperature, y = Fluorescence))
library("readxl")
DATA<- read_excel("Colby_cruise_data_2012-2017.xlsx",sheet="CTD all years",range=cell_cols("A:M"),col_types=c("skip","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric"))
DATA <- DATA[-1,]
library("ggplot2")
ggplot(data = DATA) +
geom_point(mapping = aes(x = Temperature, y = Fluorescence))
library("ggplot2")
ggplot(data = DATA) +
geom_point(mapping = aes(x = Temperature, y = Fluorescence),color="blue")
library("ggplot2")
ggplot(data = DATA) +
geom_point(mapping = aes(x = Temperature, y = Fluorescence),color="blue",shape=18,size=4)
library("ggplot2")
ggplot(data = DATA) +
geom_point(mapping = aes(x = Temperature, y = Fluorescence),color="blue",shape=18,size=2)
library("ggplot2")
ggplot(data = DATA) +
geom_point(mapping = aes(x = Temperature, y = Fluorescence),color="blue",shape=18,size=1)
DATA['Temperature']
temp <- DATA['Temperature']
fl <- DATA['Fluorescence']
cor.test(temp,fl,method='pearson')
temp
View(fl)
fl
cor.test(x=temp,y=fl,method='pearson')
is.numeric(temp)
numeric(temp)
as.numeric(temp)
library("readxl")
DATA<- read_excel("Colby_cruise_data_2012-2017.xlsx",sheet="CTD all years",range=cell_cols("A:M"),col_types=c("skip","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric"))
DATA <- DATA[-1,]
library("ggplot2")
ggplot(data = DATA) +
geom_point(mapping = aes(x = Temperature, y = Fluorescence),color="blue",shape=18,size=1)
corValue <- cor.test(DATA['Temperature'],DATA['Fluorescence'],method="pearson")
temp <- DATA['Temperature']
fl <- DATA['Fluorescence']
temp
as.numeric(temp)
?(for i in)
lapply(temp,function(x) as.numeric(x))
# create variables for our two parameters of interest
temp <- DATA['Temperature']
fl <- DATA['Fluorescence']
# convert all values within our variables to numeric
temp <- lapply(temp, function(x) as.numeric(x))
fl <- lapply(fl, function(x) as.numeric(x))
# calculate the correlation coefficient
corValue <- cor.test(temp, fl, method="pearson")
vector(temp)
temp <- as.vector(DATA['Temperature'])
class(temp)
temp <- DATA[''Temperature'']
temp <- DATA[['Temperature']]
class(temp)
temp <- DATA[,4]
class(temp)
# create variables for our two parameters of interest
temp <- DATA[['Temperature']]
fl <- DATA[['Fluorescence']]
# calculate the correlation coefficient
corValue <- cor.test(temp, fl, method="pearson")
corValue
# create variables for our two parameters of interest
# NB: we want to the data to be vectors, rather than dataframe columns
# so we can perform our analysis, hence we need to use two brackets, [[]],
# to index the DATA dataframe
temp <- DATA[['Temperature']]
fl <- DATA[['Fluorescence']]
# calculate the correlation coefficient
corValue <- cor.test(temp, fl, method="pearson")
# create variables for our two parameters of interest
# NB: we want to the data to be vectors, rather than dataframe columns so we can perform our analysis, hence we need to use two brackets, [[]], to index the DATA dataframe
temp <- DATA[['Temperature']]
fl <- DATA[['Fluorescence']]
# calculate the correlation coefficient
corValue <- cor.test(temp, fl, method="pearson")
# create variables for our two parameters of interest
# NB: we want to the data to be vectors, rather than dataframe columns so we can perform our analysis, hence we need to use two brackets, [[]], to index the DATA dataframe
temp <- DATA[['Temperature']]
fl <- DATA[['Fluorescence']]
# calculate the correlation coefficient
corValue <- cor.test(temp, fl, method="pearson")
# displaying the correlation coefficient
corValue
model1 <- lm(fl ~ temp)
model1
# fitting a linear model between the two variables
model1 <- lm(fl ~ temp)
# assigning the slope and intercept fromt the model to variables
slope <- model1['coefficients'][[1]][[2]]
intercept <- model1['coefficients'][[1]][[1]]
# fitting a linear model between the two variables
model1 <- lm(fl ~ temp)
# assigning the slope and intercept fromt the model to variables
slope <- model1['coefficients'][[1]][[2]]
intercept <- model1['coefficients'][[1]][[1]]
# adding the line to our plot
ggplot(data = DATA) +
geom_point(mapping = aes(x = Temperature, y = Fluorescence),color="blue",shape=18,size=1) +
geom_smooth(method="lm")
# fitting a linear model between the two variables
model1 <- lm(fl ~ temp)
# assigning the slope and intercept fromt the model to variables
slope <- model1['coefficients'][[1]][[2]]
intercept <- model1['coefficients'][[1]][[1]]
# adding the line to our plot
ggplot(data = DATA) +
geom_point(mapping = aes(x = Temperature, y = Fluorescence),color="blue",shape=18,size=1) +
geom_abline(slope=slope,intercept=intercept,size=0.5)
